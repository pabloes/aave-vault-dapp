/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VaultFactory, VaultFactoryInterface } from "../VaultFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "aToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getVaultsByOwner",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611468908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c91826358b4b711146100e957505063ac8187111461003a57600080fd5b346100e5576020806003193601126100e1576001600160a01b03928361005e6103ba565b16815280825282812091835190818185549182815201908195855282852090855b8181106100cb57505050826100959103836103d5565b8451948186019282875251809352850193925b8281106100b55785850386f35b83518716855293810193928101926001016100a8565b82548a168452928401926001928301920161007f565b8280fd5b5080fd5b838591346100e15760603660031901126100e1576101056103ba565b60249390918435916001600160a01b038084169291908385036100e55788604435946335ea6a7560e01b825282881685830152818a6101809c8d935afa998a156103b057839a6102ea575b5050808916156102a8578651610ff48082019082821067ffffffffffffffff83111761029657868c898b86956101b69561043f88393381526001600160a01b03918216602082015291811660408301529091166060820152608081019190915260a00190565b039083f0801561028c57169633825281602052868220908154936801000000000000000085101561027b576001850180845585101561026a57505081526020908190209190910180546001600160a01b0319168717905584516001600160a01b038088168252948516818301529284166040840152959092166060820152608081019190915233907f90ae3f42922cbde58f515026e99db64dd285292d682810cdbcb9e061b03a8f399060a090a251908152f35b634e487b7160e01b84526032905282fd5b634e487b7160e01b84526041905282fd5b87513d84823e3d90fd5b634e487b7160e01b8552604186528a85fd5b865162461bcd60e51b8152602081850152601b818a01527f4173736574206e6f7420737570706f7274656420627920706f6f6c00000000006044820152606490fd5b9080929a50813d83116103a9575b61030281836103d5565b810103126100e5576103166020820161040d565b5061032287820161040d565b5061032f6060820161040d565b5061033c6080820161040d565b5061034960a0820161040d565b5060c081015164ffffffffff8116036100e55761016061036b60e0830161042a565b91610379610100820161042a565b50610387610120820161042a565b50610395610140820161042a565b50015160ff8116036100e557978980610150565b503d6102f8565b88513d85823e3d90fd5b600435906001600160a01b03821682036103d057565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176103f757604052565b634e487b7160e01b600052604160045260246000fd5b51906fffffffffffffffffffffffffffffffff821682036103d057565b51906001600160a01b03821682036103d05756fe6101003461023457601f610ff438819003918201601f191683019291906001600160401b03841183851017610239578160a092849260409687528339810103126102345761004c8161024f565b9060209061005b82820161024f565b9261006785830161024f565b9060806100766060850161024f565b930151946001600160a01b0390828216156102065781169283156101d85781169384156101ab571693841561017d5742861115610148575060805260a05260c05260e05260005551610d909081610264823960805181818160cb015281816104b601528181610511015281816108170152610978015260a05181818161012f015281816102a101528181610721015281816108cd01526109d6015260c05181818161016201528181610304015281816109110152610a07015260e051818181610472015281816105670152610ce30152f35b60649087519062461bcd60e51b82526004820152600f60248201526e1c995b19585cd9481a5b881c185cdd608a1b6044820152fd5b60649087519062461bcd60e51b825260048201526008602482015267061546f6b656e3d360c41b6044820152fd5b875162461bcd60e51b81526004810187905260066024820152650706f6f6c3d360d41b6044820152606490fd5b875162461bcd60e51b8152600481018790526007602482015266061737365743d360cc1b6044820152606490fd5b875162461bcd60e51b815260048101879052600760248201526606f776e65723d360cc1b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036102345756fe60406080815260048036101561001457600080fd5b600091823560e01c8062f714ce1461094057806316f0115b146108fc57806338d52e0f146108b857806344ee3a1c146107fa5780634a970be7146106e75780637d2965ff146104e55780638da5cb5b146104a1578063a0c1f15e1461045d578063b6b55f2514610255578063b91d400114610238578063d3c3962f146102105763fa09e630146100a357600080fd5b3461020c57602036600319011261020c576100bc610af9565b906001600160a01b036100f2337f0000000000000000000000000000000000000000000000000000000000000000831614610b0f565b6100ff8554421015610b47565b602081841661010f811515610bb3565b6064610119610cc8565b968886519586948593631a4ca37b60e21b8552827f00000000000000000000000000000000000000000000000000000000000000001690850152600019602485015260448401527f0000000000000000000000000000000000000000000000000000000000000000165af18015610202576101d2575b50519182526001600160a01b0316602082015233907fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9080604081015b0390a280f35b602090813d83116101fb575b6101e88183610c0f565b810103126101f6573861018f565b600080fd5b503d6101de565b82513d87823e3d90fd5b8280fd5b83823461023457816003193601126102345760209061022d610cc8565b9051908152f35b5080fd5b838234610234578160031936011261023457602091549051908152f35b503461020c576020806003193601126103fb5783833593610277851515610b7c565b83516323b872dd60e01b815233828201908152306020820152604081018790526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169290918690829081906060015b038188875af190811561043657906102ee918691610440575b50610c49565b855163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000009290921691821681850190815260208101899052919391869082908190604001038188875af19081156104365790610362918691610409575b50610c8b565b823b156103fb57855163617ba03760e01b81526001600160a01b0390921690820190815260208101879052306040820152600060608201529091839183919082908490829060800103925af180156103ff576103e7575b50507f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491519283523392a280f35b6103f090610be5565b6103fb5783386103b9565b8380fd5b84513d84823e3d90fd5b6104299150873d891161042f575b6104218183610c0f565b810190610c31565b3861035c565b503d610417565b87513d87823e3d90fd5b6104579150873d891161042f576104218183610c0f565b386102e8565b838234610234578160031936011261023457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838234610234578160031936011261023457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461020c57602091826003193601126103fb57610502610af9565b916001600160a01b03610538337f0000000000000000000000000000000000000000000000000000000000000000831614610b0f565b6105458654421015610b47565b6105528185161515610bb3565b82516370a0823160e01b8152308382015294907f0000000000000000000000000000000000000000000000000000000000000000168186602481845afa9586156106805787966106b8575b50851561068a57835163a9059cbb60e01b81526001600160a01b038616848201908152602081018890529091839183919082908b90829060400103925af1908115610680578791610663575b5015610631575050519182526001600160a01b0316602082015233907f31d8e81e12cafb1a9b5f7b596aa7be75f30a9e433e5b7150c2059c01e795a3219080604081016101cc565b606492519162461bcd60e51b8352820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152fd5b61067a9150823d841161042f576104218183610c0f565b386105e9565b84513d89823e3d90fd5b50606492519162461bcd60e51b8352820152600a6024820152696e6f2061546f6b656e7360b01b6044820152fd5b9095508181813d83116106e0575b6106d08183610c0f565b810103126101f65751943861059d565b503d6106c6565b503461020c5760a036600319011261020c578135916044359060ff82168092036107f657610716841515610b7c565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831690813b156107f25784519063d505accf60e01b825233848301523060248301528660448301526024356064830152608482015260643560a482015260843560c4820152868160e48183865af180156107e8576107d3575b5083516323b872dd60e01b8152338184019081523060208281019190915260408201889052948894939290918690829081906060016102cf565b6107e09096919296610be5565b949038610799565b85513d89823e3d90fd5b8680fd5b8480fd5b5082903461023457602036600319011261023457823592610845337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610b0f565b8254908185111561088557508383947f4e4187a5cfd31a235276a431f3c394962d1b05cc4da52f6fa4e5460a5808ee21945582519182526020820152a180f35b606490602084519162461bcd60e51b8352820152600d60248201526c6d75737420696e63726561736560981b6044820152fd5b838234610234578160031936011261023457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838234610234578160031936011261023457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461020c578160031936011261020c5780359160243591846001600160a01b038085169081860361020c57606460209261099f837f0000000000000000000000000000000000000000000000000000000000000000163314610b0f565b6109ac8554421015610b47565b6109b7891515610b7c565b6109c2811515610bb3565b86519485938492631a4ca37b60e21b8452817f000000000000000000000000000000000000000000000000000000000000000016898501528b602485015260448401527f0000000000000000000000000000000000000000000000000000000000000000165af1908115610aef579085918791610ab6575b5003610a815750519182526001600160a01b0316602082015233907fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9080604081016101cc565b6020606492519162461bcd60e51b8352820152601060248201526f7061727469616c20776974686472617760801b6044820152fd5b9150506020813d602011610ae7575b81610ad260209383610c0f565b81010312610ae35784905138610a3a565b8580fd5b3d9150610ac5565b83513d88823e3d90fd5b600435906001600160a01b03821682036101f657565b15610b1657565b60405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b15610b4e57565b60405162461bcd60e51b81526020600482015260066024820152651b1bd8dad95960d21b6044820152606490fd5b15610b8357565b60405162461bcd60e51b81526020600482015260086024820152670616d6f756e743d360c41b6044820152606490fd5b15610bba57565b606460405162461bcd60e51b81526020600482015260046024820152630746f3d360e41b6044820152fd5b67ffffffffffffffff8111610bf957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610bf957604052565b908160209103126101f6575180151581036101f65790565b15610c5057565b60405162461bcd60e51b81526020600482015260136024820152721d1c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606490fd5b15610c9257565b60405162461bcd60e51b815260206004820152600e60248201526d185c1c1c9bdd994819985a5b195960921b6044820152606490fd5b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610d4e57600091610d1f575090565b90506020813d602011610d46575b81610d3a60209383610c0f565b810103126101f6575190565b3d9150610d2d565b6040513d6000823e3d90fdfea2646970667358221220c40afe16e5edf1f6dbfb3c23537a15a779bcce7d65fd9304489c48971cd37a9264736f6c63430008180033a2646970667358221220157aef07c9b3feefcd356db754efa63a787c88ab544ef2345d5cc6946e42a99064736f6c63430008180033";

type VaultFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultFactory__factory extends ContractFactory {
  constructor(...args: VaultFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultFactory__factory {
    return super.connect(runner) as VaultFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultFactoryInterface {
    return new Interface(_abi) as VaultFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VaultFactory {
    return new Contract(address, _abi, runner) as unknown as VaultFactory;
  }
}
