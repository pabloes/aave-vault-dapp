/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VaultFactory, VaultFactoryInterface } from "../VaultFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "aToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getVaultsByOwner",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611300908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c91826358b4b711146100e957505063ac8187111461003a57600080fd5b346100e5576020806003193601126100e1576001600160a01b03928361005e6103ba565b16815280825282812091835190818185549182815201908195855282852090855b8181106100cb57505050826100959103836103d5565b8451948186019282875251809352850193925b8281106100b55785850386f35b83518716855293810193928101926001016100a8565b82548a168452928401926001928301920161007f565b8280fd5b5080fd5b838591346100e15760603660031901126100e1576101056103ba565b60249390918435916001600160a01b038084169291908385036100e55788604435946335ea6a7560e01b825282881685830152818a6101809c8d935afa998a156103b057839a6102ea575b5050808916156102a8578651610e8c8082019082821067ffffffffffffffff83111761029657868c898b86956101b69561043f88393381526001600160a01b03918216602082015291811660408301529091166060820152608081019190915260a00190565b039083f0801561028c57169633825281602052868220908154936801000000000000000085101561027b576001850180845585101561026a57505081526020908190209190910180546001600160a01b0319168717905584516001600160a01b038088168252948516818301529284166040840152959092166060820152608081019190915233907f90ae3f42922cbde58f515026e99db64dd285292d682810cdbcb9e061b03a8f399060a090a251908152f35b634e487b7160e01b84526032905282fd5b634e487b7160e01b84526041905282fd5b87513d84823e3d90fd5b634e487b7160e01b8552604186528a85fd5b865162461bcd60e51b8152602081850152601b818a01527f4173736574206e6f7420737570706f7274656420627920706f6f6c00000000006044820152606490fd5b9080929a50813d83116103a9575b61030281836103d5565b810103126100e5576103166020820161040d565b5061032287820161040d565b5061032f6060820161040d565b5061033c6080820161040d565b5061034960a0820161040d565b5060c081015164ffffffffff8116036100e55761016061036b60e0830161042a565b91610379610100820161042a565b50610387610120820161042a565b50610395610140820161042a565b50015160ff8116036100e557978980610150565b503d6102f8565b88513d85823e3d90fd5b600435906001600160a01b03821682036103d057565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176103f757604052565b634e487b7160e01b600052604160045260246000fd5b51906fffffffffffffffffffffffffffffffff821682036103d057565b51906001600160a01b03821682036103d05756fe6101003461022d57601f610e8c38819003918201601f191683019291906001600160401b03841183851017610232578160a0928492604096875283398101031261022d5761004c81610248565b9060209061005b828201610248565b92610067858301610248565b90608061007660608501610248565b930151946001600160a01b0390828216156101ff5781169283156101d15781169384156101a457169384156101765742861115610141575060805260a05260c05260e05260005551610c2f908161025d823960805181818160c0015281816105010152818161055c0152818161074d01526108ae015260a0518181816101240152818161029501528181610803015261090c015260c051818181610157015281816102ea01528181610847015261093d015260e0518181816104bd015281816105b20152610b820152f35b60649087519062461bcd60e51b82526004820152600f60248201526e1c995b19585cd9481a5b881c185cdd608a1b6044820152fd5b60649087519062461bcd60e51b825260048201526008602482015267061546f6b656e3d360c41b6044820152fd5b875162461bcd60e51b81526004810187905260066024820152650706f6f6c3d360d41b6044820152606490fd5b875162461bcd60e51b8152600481018790526007602482015266061737365743d360cc1b6044820152606490fd5b875162461bcd60e51b815260048101879052600760248201526606f776e65723d360cc1b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361022d5756fe60406080815260048036101561001457600080fd5b600091823560e01c8062f714ce1461087657806316f0115b1461083257806338d52e0f146107ee57806344ee3a1c146107305780637d2965ff146105305780638da5cb5b146104ec578063a0c1f15e146104a8578063b6b55f251461024a578063b91d40011461022d578063d3c3962f146102055763fa09e6301461009857600080fd5b34610201576020366003190112610201576100b1610a2b565b906001600160a01b036100e7337f0000000000000000000000000000000000000000000000000000000000000000831614610a41565b6100f48554421015610a79565b6020818416610104811515610ae5565b606461010e610b67565b968886519586948593631a4ca37b60e21b8552827f00000000000000000000000000000000000000000000000000000000000000001690850152600019602485015260448401527f0000000000000000000000000000000000000000000000000000000000000000165af180156101f7576101c7575b50519182526001600160a01b0316602082015233907fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9080604081015b0390a280f35b602090813d83116101f0575b6101dd8183610b17565b810103126101eb5738610184565b600080fd5b503d6101d3565b82513d87823e3d90fd5b8280fd5b838234610229578160031936011261022957602090610222610b67565b9051908152f35b5080fd5b838234610229578160031936011261022957602091549051908152f35b50829034610229576020806003193601126102015783359161026d831515610aae565b80516323b872dd60e01b81523386820152306024820152604481018490526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169184816064818a875af190811561044857879161048b575b501561045257825163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000929092169182168882019081526020810187905291929185908290819060400103818a865af190811561044857879161041b575b50156103e757813b156103e3578591608483928551948593849263617ba03760e01b84528c8401528960248401523060448401528160648401525af180156101f7576103b2575b50907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491519283523392a280f35b67ffffffffffffffff81959295116103d05784529293508385610384565b634e487b7160e01b825260418652602482fd5b8580fd5b825162461bcd60e51b8152808801859052600e60248201526d185c1c1c9bdd994819985a5b195960921b6044820152606490fd5b61043b9150853d8711610441575b6104338183610b17565b810190610b4f565b8861033d565b503d610429565b84513d89823e3d90fd5b825162461bcd60e51b815280880185905260136024820152721d1c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606490fd5b6104a29150853d8711610441576104338183610b17565b886102ce565b838234610229578160031936011261022957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838234610229578160031936011261022957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b509034610201576020918260031936011261072c5761054d610a2b565b916001600160a01b03610583337f0000000000000000000000000000000000000000000000000000000000000000831614610a41565b6105908654421015610a79565b61059d8185161515610ae5565b82516370a0823160e01b8152308382015294907f0000000000000000000000000000000000000000000000000000000000000000168186602481845afa9586156104485787966106f9575b5085156106cb57835163a9059cbb60e01b81526001600160a01b038616848201908152602081018890529091839183919082908b90829060400103925af19081156104485787916106ae575b501561067c575050519182526001600160a01b0316602082015233907f31d8e81e12cafb1a9b5f7b596aa7be75f30a9e433e5b7150c2059c01e795a3219080604081016101c1565b606492519162461bcd60e51b8352820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152fd5b6106c59150823d8411610441576104338183610b17565b38610634565b50606492519162461bcd60e51b8352820152600a6024820152696e6f2061546f6b656e7360b01b6044820152fd5b9095508181813d8311610725575b6107118183610b17565b81010312610721575194386105e8565b8680fd5b503d610707565b8380fd5b508290346102295760203660031901126102295782359261077b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610a41565b825490818511156107bb57508383947f4e4187a5cfd31a235276a431f3c394962d1b05cc4da52f6fa4e5460a5808ee21945582519182526020820152a180f35b606490602084519162461bcd60e51b8352820152600d60248201526c6d75737420696e63726561736560981b6044820152fd5b838234610229578160031936011261022957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838234610229578160031936011261022957517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50903461020157816003193601126102015780359160243591846001600160a01b03808516908186036102015760646020926108d5837f0000000000000000000000000000000000000000000000000000000000000000163314610a41565b6108e28554421015610a79565b6108ed891515610aae565b6108f8811515610ae5565b86519485938492631a4ca37b60e21b8452817f000000000000000000000000000000000000000000000000000000000000000016898501528b602485015260448401527f0000000000000000000000000000000000000000000000000000000000000000165af1908115610a215790859187916109ec575b50036109b75750519182526001600160a01b0316602082015233907fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a9080604081016101c1565b6020606492519162461bcd60e51b8352820152601060248201526f7061727469616c20776974686472617760801b6044820152fd5b9150506020813d602011610a19575b81610a0860209383610b17565b810103126103e35784905138610970565b3d91506109fb565b83513d88823e3d90fd5b600435906001600160a01b03821682036101eb57565b15610a4857565b60405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b15610a8057565b60405162461bcd60e51b81526020600482015260066024820152651b1bd8dad95960d21b6044820152606490fd5b15610ab557565b60405162461bcd60e51b81526020600482015260086024820152670616d6f756e743d360c41b6044820152606490fd5b15610aec57565b606460405162461bcd60e51b81526020600482015260046024820152630746f3d360e41b6044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610b3957604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126101eb575180151581036101eb5790565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610bed57600091610bbe575090565b90506020813d602011610be5575b81610bd960209383610b17565b810103126101eb575190565b3d9150610bcc565b6040513d6000823e3d90fdfea2646970667358221220ed4b95cfcc7f8860a8d7d57868b5b0ca307560f0f7e5db39d3d9faff8f6aa1e264736f6c63430008180033a26469706673582212202fc64865aa026104b00eb5fa6c8a4ae664e03437306e10219333c3dd9f14614864736f6c63430008180033";

type VaultFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultFactory__factory extends ContractFactory {
  constructor(...args: VaultFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultFactory__factory {
    return super.connect(runner) as VaultFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultFactoryInterface {
    return new Interface(_abi) as VaultFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VaultFactory {
    return new Contract(address, _abi, runner) as unknown as VaultFactory;
  }
}
